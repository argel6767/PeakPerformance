

services:
  web:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db

    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"  
    
  db:
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"

  test:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      - DEBUG=1
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    command: python -m pytest users/tests.py movement/tests.py workout/tests.py -v

volumes:
  postgres_data:
